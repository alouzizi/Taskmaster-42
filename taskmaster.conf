# Test Case 1: Basic long-running process with restart=true
# Expected: Should run for 60s, exit normally, then restart continuously due to autorestart=true
[program:long_runner]
command=/bin/bash -c "echo 'Starting long runner'; sleep 60; echo 'Long runner finished'"
numprocs=1
autostart=true
autorestart=true
startretries=3
starttime=2
stopsignal=TERM
stoptime=5
stdout_logfile=/tmp/long_runner.log
stderr_logfile=/tmp/long_runner_err.log
directory=/tmp
environment=PATH="/usr/bin:/bin",USER="taskmaster"
umask=022

# Test Case 2: Process that should not auto-restart (autorestart=false)
# Expected: Should start once, exit with code 0, and remain STOPPED (no restart)
[program:no_restart]
command=/bin/bash -c "echo 'This process should not restart'; sleep 10; exit 0"
numprocs=1
autostart=true
autorestart=false
startretries=0
starttime=1
stopsignal=TERM
stoptime=3
stdout_logfile=/tmp/no_restart.log
stderr_logfile=/tmp/no_restart_err.log
directory=/tmp
environment=PATH="/usr/bin:/bin"
umask=755

# Test Case 3: Process with expected exit codes (autorestart=unexpected)
# Expected: Should NOT restart when exiting with codes 0,1,2 (expected), but SHOULD restart for other codes
[program:expected_exits]
command=/bin/bash -c "echo 'Process with expected exits'; sleep 5; exit 1"
numprocs=1
autostart=true
autorestart=unexpected
autorestart_exit_codes=0,1,2
startretries=2
starttime=3
stopsignal=INT
stoptime=8
stdout_logfile=/tmp/expected_exits.log
stderr_logfile=/tmp/expected_exits_err.log
directory=/var/tmp
environment=PATH="/usr/bin:/bin",DEBUG="true"
umask=644

# Test Case 4: Process that should not autostart
# Expected: Should remain STOPPED until manually started
[program:manual_start]
command=/bin/bash -c "echo 'Manually started process'; sleep 30"
numprocs=1
autostart=false
autorestart=true
startretries=5
starttime=1
stopsignal=QUIT
stoptime=10
stdout_logfile=/tmp/manual_start.log
stderr_logfile=/tmp/manual_start_err.log
directory=/home
environment=PATH="/usr/bin:/bin",MODE="manual"
umask=077

# Test Case 5: Process with multiple instances (numprocs > 1)
# Expected: Should create and run 3 separate processes with different PIDs (multi_instance_0, _1, _2)
[program:multi_instance]
command=/bin/bash -c "echo 'Instance starting'; sleep 45; echo 'Instance done'"
numprocs=3
autostart=true
autorestart=true
startretries=2
starttime=1
stopsignal=TERM
stoptime=4
stdout_logfile=/tmp/multi_instance.log
stderr_logfile=/tmp/multi_instance_err.log
directory=/tmp
environment=PATH="/usr/bin:/bin",INSTANCE="multi"
umask=022

# Test Case 6: Fast-failing process to test retry logic
# Expected: Should restart up to 3 times (startretries=3), then go to FATAL state
[program:fast_fail]
command=/bin/bash -c "echo 'Fast failing process'; sleep 5; exit 5"
numprocs=1
autostart=true
autorestart=true
startretries=3
starttime=1
stopsignal=KILL
stoptime=2
stdout_logfile=/tmp/fast_fail.log
stderr_logfile=/tmp/fast_fail_err.log
directory=/tmp
environment=PATH="/usr/bin:/bin",FAIL_MODE="fast"
umask=666

# Test Case 7: Process with long startup time
# Expected: Should take 10s to start (meets starttime=15), then run for 30s before exiting with code 0 (expected)
[program:slow_start]
command=/bin/bash -c "echo 'Starting slowly...'; sleep 10; echo 'Ready!'; sleep 30"
numprocs=1
autostart=true
autorestart=unexpected
autorestart_exit_codes=0
startretries=1
starttime=15
stopsignal=HUP
stoptime=12
stdout_logfile=/tmp/slow_start.log
stderr_logfile=/tmp/slow_start_err.log
directory=/tmp
environment=PATH="/usr/bin:/bin",STARTUP="slow"
umask=700

# Test Case 8: Process with custom signals
# Expected: Should remain STOPPED until manually started, respond to USR1 (continue) and USR2 (exit gracefully)
[program:signal_test]
command=/bin/bash -c "trap 'echo Received SIGUSR1' USR1; trap 'echo Received SIGUSR2; exit 0' USR2; while true; do sleep 1; done"
numprocs=1
autostart=false
autorestart=true
startretries=1
starttime=2
stopsignal=USR2
stoptime=6
stdout_logfile=/tmp/signal_test.log
stderr_logfile=/tmp/signal_test_err.log
directory=/tmp
environment=PATH="/usr/bin:/bin",SIGNAL_MODE="custom"
umask=755

# Test Case 9: Process that handles TERM signal gracefully but takes 5 seconds to shutdown
# Expected: Should shutdown gracefully within stoptime=8 seconds
[program:graceful_shutdown]
command=/bin/bash -c "trap 'echo Received SIGTERM, shutting down gracefully...; sleep 5; echo Graceful shutdown complete; exit 0' TERM; echo Starting graceful process; while true; do sleep 1; done"
numprocs=1
autostart=true
autorestart=false
startretries=0
starttime=1
stopsignal=TERM
stoptime=8
stdout_logfile=/tmp/graceful_shutdown.log
stderr_logfile=/tmp/graceful_shutdown_err.log
directory=/tmp
environment=PATH="/usr/bin:/bin"
umask=755

# Test Case 10: Process with NO stdout/stderr redirection
# Expected: Output should appear in the terminal where TaskMaster is running
[program:console_output]
command=/bin/bash -c "echo 'This message appears in console'; echo 'This error appears in console' >&2; sleep 20"
numprocs=1
autostart=true
autorestart=false
startretries=1
starttime=1
stopsignal=TERM
stoptime=3
directory=/tmp
environment=PATH="/usr/bin:/bin"
umask=022

# Test Case 11: Umask test - creates files to verify permission masking
# Expected: Should create files with permissions affected by umask=027 -rw-r-----
[program:umask_test]
command=/bin/bash -c "echo 'Testing umask...'; touch /tmp/umask_test_file.txt; echo 'File created'; ls -la /tmp/umask_test_file.txt; sleep 10"
numprocs=1
autostart=true
autorestart=false
startretries=0
starttime=1
stopsignal=TERM
stoptime=3
stdout_logfile=/tmp/umask_test.log
stderr_logfile=/tmp/umask_test_err.log
directory=/tmp
environment=PATH="/usr/bin:/bin"
umask=027

# Test Case 12: Directory test - verifies process runs in specified directory
# Expected: Should run in /var/tmp directory and create files there
[program:directory_test]
command=/bin/bash -c "echo 'Current directory:'; pwd; sleep 10"
numprocs=1
autostart=true
autorestart=false
startretries=0
starttime=1
stopsignal=TERM
stoptime=3
stdout_logfile=/tmp/directory_test.log
stderr_logfile=/tmp/directory_test_err.log
directory=/var/tmp
environment=PATH="/usr/bin:/bin"
umask=022

# Test Case 13: Environment test - verifies custom environment variables are set
# Expected: Should display custom environment variables and PATH
[program:environment_test]
command=/bin/bash -c "echo 'Testing environment...'; echo 'CUSTOM_VAR=$CUSTOM_VAR'; echo 'TEST_MODE=$TEST_MODE'; echo 'PATH=$PATH'; env | grep -E 'CUSTOM_VAR|TEST_MODE' | sort; sleep 10"
numprocs=1
autostart=true
autorestart=false
startretries=0
starttime=1
stopsignal=TERM
stoptime=3
stdout_logfile=/tmp/environment_test.log
stderr_logfile=/tmp/environment_test_err.log
directory=/tmp
environment=PATH="/usr/bin:/bin",CUSTOM_VAR="test_value",TEST_MODE="development"
umask=022